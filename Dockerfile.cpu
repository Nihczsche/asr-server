FROM ubuntu:jammy

RUN --mount=type=cache,target=/var/cache/apt \ 
    --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
    DEBIAN_FRONTEND=noninteractive apt update && \
    DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends python3 \
    python3-distutils python-is-python3 git \
    build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev curl \
    libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev ca-certificates

# Install pyenv
RUN curl https://pyenv.run | bash

# Configure pyenv in current environment
ENV PYENV_ROOT="/root/.pyenv"
ENV PATH="$PYENV_ROOT/bin:$PATH"

WORKDIR /home/app

COPY src /home/app
RUN --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    eval "$(pyenv init -)"; \
    eval "$(pyenv virtualenv-init -)"; \
    env PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.12; \
    pyenv virtualenv 3.12 venv; \
    pyenv activate venv; \
    export LD_LIBRARY_PATH=$(pyenv virtualenv-prefix)/lib:$LD_LIBRARY_PATH; \
    pip install .[ui]

ENV NEMO__MODEL=nvidia/stt_en_conformer_ctc_small
ENV NEMO__INFERENCE_DEVICE=cpu
ENV UVICORN_HOST=0.0.0.0
ENV UVICORN_PORT=8000

CMD  eval "$(pyenv init -)" && eval "$(pyenv virtualenv-init -)" && pyenv activate venv && export LD_LIBRARY_PATH=$(pyenv virtualenv-prefix)/lib:$LD_LIBRARY_PATH && uvicorn --factory asr_server.main:create_app
